// @generated by protoc-gen-es v2.6.1
// @generated from file notificationservice.proto (package land.gno.dsocial.notificationservice.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file notificationservice.proto.
 */
export declare const file_notificationservice: GenFile;

/**
 * @generated from message land.gno.dsocial.notificationservice.v1.RegisterDeviceRequest
 */
export declare type RegisterDeviceRequest = Message<"land.gno.dsocial.notificationservice.v1.RegisterDeviceRequest"> & {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;
};

/**
 * Describes the message land.gno.dsocial.notificationservice.v1.RegisterDeviceRequest.
 * Use `create(RegisterDeviceRequestSchema)` to create a new message.
 */
export declare const RegisterDeviceRequestSchema: GenMessage<RegisterDeviceRequest>;

/**
 * @generated from message land.gno.dsocial.notificationservice.v1.RegisterDeviceResponse
 */
export declare type RegisterDeviceResponse = Message<"land.gno.dsocial.notificationservice.v1.RegisterDeviceResponse"> & {
};

/**
 * Describes the message land.gno.dsocial.notificationservice.v1.RegisterDeviceResponse.
 * Use `create(RegisterDeviceResponseSchema)` to create a new message.
 */
export declare const RegisterDeviceResponseSchema: GenMessage<RegisterDeviceResponse>;

/**
 * @generated from message land.gno.dsocial.notificationservice.v1.HelloRequest
 */
export declare type HelloRequest = Message<"land.gno.dsocial.notificationservice.v1.HelloRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message land.gno.dsocial.notificationservice.v1.HelloRequest.
 * Use `create(HelloRequestSchema)` to create a new message.
 */
export declare const HelloRequestSchema: GenMessage<HelloRequest>;

/**
 * @generated from message land.gno.dsocial.notificationservice.v1.HelloResponse
 */
export declare type HelloResponse = Message<"land.gno.dsocial.notificationservice.v1.HelloResponse"> & {
  /**
   * @generated from field: string greeting = 1;
   */
  greeting: string;
};

/**
 * Describes the message land.gno.dsocial.notificationservice.v1.HelloResponse.
 * Use `create(HelloResponseSchema)` to create a new message.
 */
export declare const HelloResponseSchema: GenMessage<HelloResponse>;

/**
 * @generated from message land.gno.dsocial.notificationservice.v1.HelloStreamRequest
 */
export declare type HelloStreamRequest = Message<"land.gno.dsocial.notificationservice.v1.HelloStreamRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message land.gno.dsocial.notificationservice.v1.HelloStreamRequest.
 * Use `create(HelloStreamRequestSchema)` to create a new message.
 */
export declare const HelloStreamRequestSchema: GenMessage<HelloStreamRequest>;

/**
 * @generated from message land.gno.dsocial.notificationservice.v1.HelloStreamResponse
 */
export declare type HelloStreamResponse = Message<"land.gno.dsocial.notificationservice.v1.HelloStreamResponse"> & {
  /**
   * @generated from field: string greeting = 1;
   */
  greeting: string;
};

/**
 * Describes the message land.gno.dsocial.notificationservice.v1.HelloStreamResponse.
 * Use `create(HelloStreamResponseSchema)` to create a new message.
 */
export declare const HelloStreamResponseSchema: GenMessage<HelloStreamResponse>;

/**
 * @generated from message land.gno.dsocial.notificationservice.v1.ErrDetails
 */
export declare type ErrDetails = Message<"land.gno.dsocial.notificationservice.v1.ErrDetails"> & {
  /**
   * @generated from field: repeated land.gno.dsocial.notificationservice.v1.ErrCode codes = 1;
   */
  codes: ErrCode[];
};

/**
 * Describes the message land.gno.dsocial.notificationservice.v1.ErrDetails.
 * Use `create(ErrDetailsSchema)` to create a new message.
 */
export declare const ErrDetailsSchema: GenMessage<ErrDetails>;

/**
 * The ErrCode enum defines errors for gRPC API functions. These are converted
 * from the Go error types returned by gnoclient.
 *
 * ----------------
 * Special errors
 * ----------------
 *
 * @generated from enum land.gno.dsocial.notificationservice.v1.ErrCode
 */
export enum ErrCode {
  /**
   * Undefined is the default value. It should never be set manually
   *
   * @generated from enum value: Undefined = 0;
   */
  Undefined = 0,

  /**
   * TODO indicates that you plan to create an error later
   *
   * @generated from enum value: TODO = 1;
   */
  TODO = 1,

  /**
   * ErrNotImplemented indicates that a method is not implemented yet
   *
   * @generated from enum value: ErrNotImplemented = 2;
   */
  ErrNotImplemented = 2,

  /**
   * ErrInternal indicates an unknown error (without Code), i.e. in gRPC
   *
   * @generated from enum value: ErrInternal = 3;
   */
  ErrInternal = 3,

  /**
   * @generated from enum value: ErrInvalidInput = 100;
   */
  ErrInvalidInput = 100,

  /**
   * @generated from enum value: ErrMissingInput = 101;
   */
  ErrMissingInput = 101,

  /**
   * @generated from enum value: ErrSerialization = 102;
   */
  ErrSerialization = 102,

  /**
   * @generated from enum value: ErrDeserialization = 103;
   */
  ErrDeserialization = 103,

  /**
   * @generated from enum value: ErrInitService = 104;
   */
  ErrInitService = 104,

  /**
   * @generated from enum value: ErrRunGRPCServer = 105;
   */
  ErrRunGRPCServer = 105,

  /**
   * @generated from enum value: ErrDB = 200;
   */
  ErrDB = 200,

  /**
   * @generated from enum value: ErrDBNotFound = 201;
   */
  ErrDBNotFound = 201,
}

/**
 * Describes the enum land.gno.dsocial.notificationservice.v1.ErrCode.
 */
export declare const ErrCodeSchema: GenEnum<ErrCode>;

/**
 * NotificationService is the service to manage Push Notifications in your app.
 *
 * @generated from service land.gno.dsocial.notificationservice.v1.NotificationService
 */
export declare const NotificationService: GenService<{
  /**
   * @generated from rpc land.gno.dsocial.notificationservice.v1.NotificationService.RegisterDevice
   */
  registerDevice: {
    methodKind: "unary";
    input: typeof RegisterDeviceRequestSchema;
    output: typeof RegisterDeviceResponseSchema;
  },
  /**
   * Hello is for debug purposes
   *
   * @generated from rpc land.gno.dsocial.notificationservice.v1.NotificationService.Hello
   */
  hello: {
    methodKind: "unary";
    input: typeof HelloRequestSchema;
    output: typeof HelloResponseSchema;
  },
  /**
   * HelloStream is for debug purposes
   *
   * @generated from rpc land.gno.dsocial.notificationservice.v1.NotificationService.HelloStream
   */
  helloStream: {
    methodKind: "server_streaming";
    input: typeof HelloStreamRequestSchema;
    output: typeof HelloStreamResponseSchema;
  },
}>;

